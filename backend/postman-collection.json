{
	"info": {
		"_postman_id": "404b4911-33e6-4320-b663-a6fff45dd552",
		"name": "Quick Short API's Collections",
		"description": "This document outlines how to structure a Postman collection to test the authentication APIs provided in the Django + React + TypeScript starter project using JWT.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32876258"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Auth Management",
					"item": [
						{
							"name": "Signup",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "testuser1@gmail.com",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "abc12345@",
											"type": "text"
										},
										{
											"key": "confirm_password",
											"value": "abc12345@",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/signup/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"signup",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Send Account Verification Email",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "testuser5@gmail.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/verify-account/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"verify-account",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Account Verification Confirm",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "token",
											"value": "accoutnverificationtoeknfromemail",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/verify-account/confirm/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"verify-account",
										"confirm",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Handles user registration, and account activation."
				},
				{
					"name": "Token Management",
					"item": [
						{
							"name": "Get Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const response = pm.response.json()",
											"",
											"pm.globals.set(\"refresh_token\", response.data.refresh_token)",
											"pm.globals.set(\"access_token\", response.data.access_token)",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "shailesh@gmail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "shailesh",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/signin/token/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"signin",
										"token",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseData = pm.response.json();",
											"pm.globals.set(\"access_token\", responseData.data.access_token);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/signin/token/refresh/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"signin",
										"token",
										"refresh",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Signout",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/signout/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"signout",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Manages access and refresh tokens, including renewal and logout."
				},
				{
					"name": "User Management",
					"item": [
						{
							"name": "User Details",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/auth/user/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "first_name",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "last_name",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/user/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate Account",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "abc12345@",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/deactivate-account/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"deactivate-account",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Provides endpoints for accessing and modifying authenticated user account details."
				},
				{
					"name": "Password Management",
					"item": [
						{
							"name": "Change Password",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "current_password",
											"value": "abc12345@",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "abc12345@12345",
											"type": "text"
										},
										{
											"key": "confirm_password",
											"value": "abc12345@12345",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/change-password/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"change-password",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "testuser7@gmail.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/reset-password/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"reset-password",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Password Confirm",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "token",
											"value": "resetpasswordtokenfromemail",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "abc12345@",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/reset-password/confirm/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"reset-password",
										"confirm",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Handles password recovery and reset flows for users."
				}
			],
			"description": "Centralized endpoints for handling user identity, including authentication, token handling, password resets, and account management."
		},
		{
			"name": "Records",
			"item": [
				{
					"name": "List",
					"item": [
						{
							"name": "Records",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/records/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Record/s",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/records/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Handles operations for retrieving multiple \\[entities\\] and creating new ones. Includes support for pagination, filtering, and sorting."
				},
				{
					"name": "Detail",
					"item": [
						{
							"name": "Record By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/records/1/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Record",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/records/1/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Partial Update Record",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/records/1/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Record",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/records/1/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										"1",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Covers operations on individual \\[entity\\] records by ID, including retrieval, full/partial updates, and deletion."
				}
			],
			"description": "Contains grouped API endpoints for managing \\[entities\\], including both collection-level and individual record operations."
		},
		{
			"name": "Quick Short",
			"item": [
				{
					"name": "Videos",
					"item": [
						{
							"name": "List",
							"item": [
								{
									"name": "Videos",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/videos/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"videos",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "1",
													"disabled": true
												},
												{
													"key": "owner",
													"value": "2",
													"disabled": true
												},
												{
													"key": "tags",
													"value": "10",
													"disabled": true
												},
												{
													"key": "search",
													"value": "shorts",
													"disabled": true
												},
												{
													"key": "ordering",
													"value": "-updated_at",
													"description": "The ordering key support those values id, -id, updated_at, and -updated_at(default)",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Video/s",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "This is new short vidoe post",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/videos/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"videos",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Handles operations for retrieving multiple video and creating new ones. Includes support for pagination, filtering, and sorting."
						},
						{
							"name": "Detail",
							"item": [
								{
									"name": "Video By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/videos/22/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"videos",
												"22",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Video",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Update This is new short vidoe post",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/videos/22/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"videos",
												"22",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Partial Update Video",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{base_url}}/shorts/videos/22/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"videos",
												"22",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Video",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{base_url}}/shorts/videos/22/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"videos",
												"22",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Covers operations on individual video records by ID, including retrieval, full/partial updates, and deletion."
						}
					],
					"description": "Contains grouped API endpoints for managing videos, including both collection-level and individual record operations."
				},
				{
					"name": "Tag",
					"item": [
						{
							"name": "List",
							"item": [
								{
									"name": "Tags",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/tags/?page=2&page-size=2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"tags",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page-size",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Tag/s",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "pydev",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/tags/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"tags",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Handles operations for retrieving multiple tags and creating new ones. Includes support for pagination, filtering, and sorting."
						}
					],
					"description": "Contains grouped API endpoints for managing tags, including both collection-level and individual record operations."
				},
				{
					"name": "Views",
					"item": [
						{
							"name": "List",
							"item": [
								{
									"name": "Views",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/views/?page=2&page-size=2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"views",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page-size",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create View/s",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "video",
													"value": "10",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/views/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"views",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Handles operations for retrieving multiple views and creating new ones. Includes support for pagination, filtering, and sorting."
						}
					],
					"description": "Contains grouped API endpoints for managing views, including both collection-level and individual record operations."
				},
				{
					"name": "Like",
					"item": [
						{
							"name": "List",
							"item": [
								{
									"name": "Likes",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/likes/?page=2&page-size=2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"likes",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page-size",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Like/s",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "video",
													"value": "6",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/likes/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"likes",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Handles operations for retrieving multiple likes and creating new ones. Includes support for pagination, filtering, and sorting."
						},
						{
							"name": "Detail",
							"item": [
								{
									"name": "Like By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/likes/21/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"likes",
												"21",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Like",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{base_url}}/shorts/likes/1/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"likes",
												"1",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Covers operations on individual like records by ID, including retrieval, full/partial updates, and deletion."
						}
					],
					"description": "Contains grouped API endpoints for managing likes, including both collection-level and individual record operations."
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "List",
							"item": [
								{
									"name": "Comments",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/comments/?video=2",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"comments",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page-size",
													"value": "2",
													"disabled": true
												},
												{
													"key": "video",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Comment/s",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "video",
													"value": "2",
													"type": "text"
												},
												{
													"key": "content",
													"value": "New test comment to video 2",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/comments/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"comments",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Handles operations for retrieving multiple comments and creating new ones. Includes support for pagination, filtering, and sorting."
						},
						{
							"name": "Detail",
							"item": [
								{
									"name": "Comment By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/comments/21/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"comments",
												"21",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Comment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "content",
													"value": "update test comment to video 7",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/comments/21/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"comments",
												"21",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Partial Update Comment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "content",
													"value": "update test comment to video 7",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/comments/21/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"comments",
												"21",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Comment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{base_url}}/shorts/comments/1/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"comments",
												"1",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Covers operations on individual comment records by ID, including retrieval, full/partial updates, and deletion."
						}
					],
					"description": "Contains grouped API endpoints for managing comments, including both collection-level and individual record operations."
				},
				{
					"name": "Follows",
					"item": [
						{
							"name": "List",
							"item": [
								{
									"name": "Follows",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/follows/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"follows",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Follow/s",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "following",
													"value": "9",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/follows/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"follows",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Handles operations for retrieving multiple follows and creating new ones. Includes support for pagination, filtering, and sorting."
						},
						{
							"name": "Detail",
							"item": [
								{
									"name": "Follow By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/shorts/follows/21/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"follows",
												"21",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Follow",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{base_url}}/shorts/follows/1/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"follows",
												"1",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Covers operations on individual follow records by ID, including retrieval, full/partial updates, and deletion."
						}
					],
					"description": "Contains grouped API endpoints for managing follows, including both collection-level and individual record operations."
				},
				{
					"name": "Report",
					"item": [
						{
							"name": "List",
							"item": [
								{
									"name": "Create Report/s",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "video",
													"value": "8",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "report test reason.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/shorts/reports/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"shorts",
												"reports",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Handles operations for retrieving multiple reports and creating new ones. Includes support for pagination, filtering, and sorting."
						}
					],
					"description": "Contains grouped API endpoints for managing reports, including both collection-level and individual record operations."
				}
			],
			"description": "Centralized endpoints for handling quick short management."
		}
	]
}